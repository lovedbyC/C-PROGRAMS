
CREATE TABLE CATEGOR (
    CATEID VARCHAR2(20) PRIMARY KEY NOT NULL,
    CATENAME VARCHAR2(50) NOT NULL
);

CREATE TABLE BRANCH (
    BRANCHNUM VARCHAR2(20) PRIMARY KEY NOT NULL,
    BRANCHNAME VARCHAR2(50) NOT NULL,
    BRANCHCITY VARCHAR(20) NOT NULL,
    BRANCHSTR VARCHAR2(50) NOT NULL,
    BRANCHAREACODE VARCHAR2(50) NOT NULL,
    BRANCHPHONENUM NUMBER(10) NOT NULL
      
);

CREATE TABLE DVD (
    DVDNUM VARCHAR2(20) PRIMARY KEY NOT NULL,
    TITLE VARCHAR2(50) NOT NULL,
    CATEID VARCHAR(20) NOT NULL,
    DVDYEAR NUMBER(4) NOT NULL,
    DVDCAST VARCHAR2(50) NOT NULL,
    DVDDIRECTOR VARCHAR2(50) NOT NULL,
    DVDSTATUS VARCHAR2(50) NOT NULL,
    DVDCOSTFORLOSSES VARCHAR2(50) NOT NULL,
    DVDLATERETURNFEE VARCHAR2(50)NOT NULL,
    CONSTRAINT fk_CATEID FOREIGN KEY (CATEID) REFERENCES CATEGOR (CATEID)
);

CREATE TABLE DVDCOPY (
    DVDCOPYID VARCHAR2(20) PRIMARY KEY NOT NULL,
    DVDNUM VARCHAR2(50) NOT NULL,
    BRANCHNUM VARCHAR2(20) NOT NULL,
    CONSTRAINT fk_BRANCHNUM FOREIGN KEY (BRANCHNUM) REFERENCES BRANCH (BRANCHNUM),
    CONSTRAINT fk_DVDNUM FOREIGN KEY (DVDNUM) REFERENCES DVD (DVDNUM)
);

CREATE TABLE BOOK (
    ISBN VARCHAR2(20) PRIMARY KEY,
    BOOKTITLE VARCHAR2(50) NOT NULL,
    BOOKYEAR NUMBER(4) NOT NULL,
    BOOKAUTHOR VARCHAR2(50)NOT NULL,
    BOOKCOSTFORLOSSES VARCHAR2(50) NOT NULL,
    BOOKLATERETURNFEE VARCHAR2(50) NOT NULL
    
);

CREATE TABLE BOOKCOPY (
    BOOKCOPYID VARCHAR2(20) PRIMARY KEY NOT NULL,
    ISBN VARCHAR2(20) NOT NULL,
    BRANCHID VARCHAR2(20) NOT NULL,
    CONSTRAINT fk_BRANCHID FOREIGN KEY (BRANCHID) REFERENCES BRANCH (BRANCHNUM),
    CONSTRAINT fk_ISBN FOREIGN KEY (ISBN) REFERENCES BOOK (ISBN)
);

CREATE TABLE RESERVATION (
    RESERVATIONID VARCHAR2(20) PRIMARY KEY NOT NULL,
    CARDNUM NUMBER(10) NOT NULL,
    RESERVATIONDATE DATE,
    DUEDATE DATE,
    RETURNDATE DATE,
    CONSTRAINT fk_CARDNUM FOREIGN KEY (CARDNUM) REFERENCES LIBRARYCARD (CARDNUM)
);

CREATE TABLE BOOKRESERVATION(
  BOOKRESID VARCHAR2(20) PRIMARY KEY NOT NULL,
  RESERVATIONID VARCHAR(20) NOT NULL,
  BOOKCOID VARCHAR(20) NOT NULL,
  CONSTRAINT fk_RESERVATIONID FOREIGN KEY (RESERVATIONID) REFERENCES RESERVATION (RESERVATIONID),
  CONSTRAINT fk_BOOKCOID FOREIGN KEY (BOOKCOID) REFERENCES BOOKCOPY (BOOKCOPYID)


);

CREATE TABLE DVDRESERVATION(
  DVDRESID VARCHAR2(20)PRIMARY KEY NOT NULL,
  RESERVID VARCHAR(20) NOT NULL,
  DVDCOID VARCHAR(20) NOT NULL,
  CONSTRAINT fk_RESERVID FOREIGN KEY (RESERVID) REFERENCES RESERVATION (RESERVATIONID),
  CONSTRAINT fk_DVDCOID FOREIGN KEY (DVDCOID) REFERENCES DVDCOPY (DVDCOPYID)
);

CREATE TABLE Person (
  PERSONID VARCHAR2(20) PRIMARY KEY NOT NULL,
  BRANID VARCHAR(20) NOT NULL,
  FIRSTNAME VARCHAR2(20) NOT NULL,
  LASTNAME VARCHAR2(20) NOT NULL,
  ADDRESS VARCHAR2(50) NOT NULL,
  PHONENUM NUMBER(10) NOT NULL,
  DATEOFBIRTH DATE,
  CONSTRAINT fk_BRANID FOREIGN KEY (BRANID) REFERENCES BRANCH (BRANCHNUM)
);

CREATE TABLE CUSTOMER(
  CustomerID NUMBER(10)PRIMARY KEY NOT NULL,
  PERID VARCHAR(20) NOT NULL,
  CONSTRAINT fk_PERID FOREIGN KEY (PERID) REFERENCES PERSON (PERSONID)
);

CREATE TABLE EMPLOYEE(
  EmployeeID VARCHAR2(20) PRIMARY KEY NOT NULL,
  PayCheck NUMBER(6) NOT NULL,
  PERSID VARCHAR(20) NOT NULL,
  CONSTRAINT fk_PERSID FOREIGN KEY (PERSID) REFERENCES PERSON (PERSONID)
);

CREATE TABLE LIBRARYCARD(
  CARDNUM NUMBER(10) PRIMARY KEY NOT NULL,
  PERNID VARCHAR(20) NOT NULL,
  FINEAMOUNT NUMBER(6) NOT NULL,
  STATUS VARCHAR(20),
  CONSTRAINT fk_PERNID FOREIGN KEY (PERNID) REFERENCES PERSON (PERSONID)
);

CREATE TABLE CHECKOUT (
    CHECKOUTID VARCHAR2(20) PRIMARY KEY NOT NULL,
    CARDNUMBER NUMBER(10)NOT NULL,
    CHECKOUTDATE DATE,
    DUEDATE DATE,
    RETURNDATE DATE,
    CONSTRAINT fk_CARDNUMBER FOREIGN KEY (CARDNUMBER) REFERENCES LIBRARYCARD (CARDNUM)
);

CREATE TABLE BOOKCHECKOUT(
  BOOKCHEID VARCHAR2(20)PRIMARY KEY NOT NULL,
  CHECKOUTID VARCHAR(20)NOT NULL,
  BOOKCOPID VARCHAR(20) NOT NULL,
  CONSTRAINT fk_CHECKOUTID FOREIGN KEY (CHECKOUTID) REFERENCES CHECKOUT (CHECKOUTID),
  CONSTRAINT fk_BOOKCOPID FOREIGN KEY (BOOKCOPID) REFERENCES BOOKCOPY (BOOKCOPYID)
);

CREATE TABLE DVDCHECKOUT
(
  DVDCHEID VARCHAR2(20)PRIMARY KEY NOT NULL,
  CHECOUTID VARCHAR(20) NOT NULL,
  DVDCOPID VARCHAR(20) NOT NULL,
  CONSTRAINT fk_CHECOUTID FOREIGN KEY (CHECOUTID) REFERENCES CHECKOUT (CHECKOUTID),
   CONSTRAINT fk_DVDCOPID FOREIGN KEY (DVDCOPID) REFERENCES DVDCOPY (DVDCOPYID)
);



INSERT INTO BRANCH (BRANCHNUM, BRANCHNAME, BRANCHCITY, BRANCHSTR, BRANCHAREACODE, BRANCHPHONENUM)
VALUES ('001', 'Main Library', 'Cape Town', 'Library Street', '12345', 0118234768);

INSERT INTO CATEGOR (CATEID, CATENAME)
VALUES ('ROM','ROMANCE');

INSERT INTO DVD (DVDNUM, CATEID, TITLE, DVDYEAR, DVDCAST, DVDDIRECTOR, DVDSTATUS, DVDCOSTFORLOSSES, DVDLATERETURNFEE)
VALUES ('DVD001', 'ROM', 'The Princess Diaries', 2004, 'Anne Hathaway, Julie Andrews', 'Gally Gerson', 'Available', '200', '20');

INSERT INTO DVDCOPY (DVDCOPYID, DVDNUM, BRANCHNUM)
VALUES( 'TPD2N001','DVD001', '001');

INSERT INTO BOOK (ISBN, BOOKTITLE, BOOKYEAR, BOOKAUTHOR, BOOKCOSTFORLOSSES, BOOKLATERETURNFEE)
VALUES ('ISBN001', 'Dork Diaries Book 2', 2011, 'Anders Jeferson', '500', '50');

INSERT INTO BOOKCOPY (BOOKCOPYID, ISBN, BRANCHID)
VALUES( 'DD2N001','ISBN001', '001');

INSERT INTO PERSON (PERSONID, BRANID,FIRSTNAME, LASTNAME, ADDRESS, PHONENUM, DATEOFBIRTH)
VALUES ('PERSON001','001', 'John', 'Doe', '123 Main St', 0736235584, TO_DATE('1990-01-15', 'YYYY-MM-DD'));

INSERT INTO PERSON (PERSONID, BRANID,FIRSTNAME, LASTNAME, ADDRESS, PHONENUM, DATEOFBIRTH)
VALUES ('PERSON002','001', 'Mary', 'Madelyn', '123 Marylyn St', 0835293584, TO_DATE('1990-02-15', 'YYYY-MM-DD'));


INSERT INTO CUSTOMER (CustomerID, PERID)
VALUES (1, 'PERSON001');

INSERT INTO EMPLOYEE (EMPLOYEEID, PAYCHECK, PERSID)
VALUES (1,50000, 'PERSON002');

INSERT INTO LIBRARYCARD (CARDNUM, PERNID, FINEAMOUNT, STATUS)
VALUES (1001, 'PERSON001', 0, 'Active');


INSERT INTO LIBRARYCARD (CARDNUM, PERNID, FINEAMOUNT, STATUS)
VALUES (1002, 'PERSON002', 0, 'Active');

INSERT INTO CHECKOUT (CHECKOUTID, CARDNUMBER, CHECKOUTDATE, DUEDATE, RETURNDATE)
VALUES ('CHECKOUT001', 1001, TO_DATE('2023-11-07', 'YYYY-MM-DD'), TO_DATE('2023-11-21', 'YYYY-MM-DD'), NULL);


INSERT INTO CHECKOUT (CHECKOUTID, CARDNUMBER, CHECKOUTDATE, DUEDATE, RETURNDATE)
VALUES ('CHECKOUT002', 1002, TO_DATE('2023-11-07', 'YYYY-MM-DD'), TO_DATE('2023-11-21', 'YYYY-MM-DD'), NULL);


INSERT INTO BOOKCHECKOUT (BOOKCHEID, CHECKOUTID, BOOKCOPID)
VALUES ('BOOKCHECKOUT001', 'CHECKOUT001','DD2N001');


INSERT INTO DVDCHECKOUT (DVDCHEID, CHECOUTID, DVDCOPID)
VALUES ('DVDCHECKOUT001', 'CHECKOUT002', 'TPD2N001');

INSERT INTO RESERVATION (RESERVATIONID, CARDNUM, RESERVATIONDATE, DUEDATE, RETURNDATE)
VALUES ('RESERVATION001', 1001, TO_DATE('2023-11-07', 'YYYY-MM-DD'), TO_DATE('2023-11-14', 'YYYY-MM-DD'), NULL);

INSERT INTO BOOKRESERVATION (BOOKRESID, RESERVATIONID, BOOKCOID)
VALUES ('BOOKRESERVATION001', 'RESERVATION001', 'DD2N001');


INSERT INTO DVDRESERVATION (DVDRESID, RESERVID, DVDCOID)
VALUES ('DVDRESERVATION001', 'RESERVATION001', 'TPD2N001' );
